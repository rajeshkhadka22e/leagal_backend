/*! tailwindcss v4.0.6 | MIT License | https://tailwindcss.com */
.absolute {
  position: absolute;
}
.fixed {
  position: fixed;
}
.relative {
  position: relative;
}
.static {
  position: static;
}
.top-1\/2 {
  top: calc(1/2 * 100%);
}
.top-\[1\.25rem\] {
  top: 1.25rem;
}
.top-\[124px\] {
  top: 124px;
}
.right-\[1\.25rem\] {
  right: 1.25rem;
}
.right-\[40px\] {
  right: 40px;
}
.-bottom-\[3rem\] {
  bottom: calc(3rem * -1);
}
.bottom-\[1\.25rem\] {
  bottom: 1.25rem;
}
.left-1\/2 {
  left: calc(1/2 * 100%);
}
.left-\[1\.25rem\] {
  left: 1.25rem;
}
.left-\[40px\] {
  left: 40px;
}
.z-10 {
  z-index: 10;
}
.z-30 {
  z-index: 30;
}
.z-50 {
  z-index: 50;
}
.col-span-1 {
  grid-column: span 1 / span 1;
}
.col-span-2 {
  grid-column: span 2 / span 2;
}
.col-span-3 {
  grid-column: span 3 / span 3;
}
.container {
  width: 100%;
}
.mx-auto {
  margin-inline: auto;
}
.my-auto {
  margin-block: auto;
}
.mb-\[2rem\] {
  margin-bottom: 2rem;
}
.line-clamp-1 {
  overflow: hidden;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 1;
}
.line-clamp-2 {
  overflow: hidden;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 2;
}
.block {
  display: block;
}
.flex {
  display: flex;
}
.grid {
  display: grid;
}
.hidden {
  display: none;
}
.inline {
  display: inline;
}
.inline-block {
  display: inline-block;
}
.table {
  display: table;
}
.h-\[24rem\] {
  height: 24rem;
}
.h-\[150px\] {
  height: 150px;
}
.h-\[300px\] {
  height: 300px;
}
.h-\[450px\] {
  height: 450px;
}
.h-\[500px\] {
  height: 500px;
}
.h-full {
  height: 100%;
}
.h-max {
  height: max-content;
}
.min-h-\[8\.75rem\] {
  min-height: 8.75rem;
}
.w-\[10rem\] {
  width: 10rem;
}
.w-\[35\%\] {
  width: 35%;
}
.w-\[65\%\] {
  width: 65%;
}
.w-\[265px\] {
  width: 265px;
}
.w-\[300px\] {
  width: 300px;
}
.w-\[400px\] {
  width: 400px;
}
.w-full {
  width: 100%;
}
.min-w-\[300px\] {
  min-width: 300px;
}
.min-w-full {
  min-width: 100%;
}
.flex-1 {
  flex: 1;
}
.flex-shrink-0 {
  flex-shrink: 0;
}
.grow {
  flex-grow: 1;
}
.-translate-x-1\/2 {
  --tw-translate-x: calc(calc(1/2 * 100%) * -1);
  translate: var(--tw-translate-x) var(--tw-translate-y);
}
.-translate-y-1\/2 {
  --tw-translate-y: calc(calc(1/2 * 100%) * -1);
  translate: var(--tw-translate-x) var(--tw-translate-y);
}
.translate-x-1\/2 {
  --tw-translate-x: calc(1/2 * 100%);
  translate: var(--tw-translate-x) var(--tw-translate-y);
}
.translate-y-1\/2 {
  --tw-translate-y: calc(1/2 * 100%);
  translate: var(--tw-translate-x) var(--tw-translate-y);
}
.transform {
  transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z) var(--tw-skew-x) var(--tw-skew-y);
}
.cursor-pointer {
  cursor: pointer;
}
.grid-cols-1 {
  grid-template-columns: repeat(1, minmax(0, 1fr));
}
.grid-cols-2 {
  grid-template-columns: repeat(2, minmax(0, 1fr));
}
.flex-col {
  flex-direction: column;
}
.flex-wrap {
  flex-wrap: wrap;
}
.items-center {
  align-items: center;
}
.justify-between {
  justify-content: space-between;
}
.justify-center {
  justify-content: center;
}
.gap-\[3rem\] {
  gap: 3rem;
}
.overflow-hidden {
  overflow: hidden;
}
.overflow-x-auto {
  overflow-x: auto;
}
.scroll-smooth {
  scroll-behavior: smooth;
}
.rounded-full {
  border-radius: calc(infinity * 1px);
}
.border {
  border-style: var(--tw-border-style);
  border-width: 1px;
}
.border-1 {
  border-style: var(--tw-border-style);
  border-width: 1px;
}
.border-2 {
  border-style: var(--tw-border-style);
  border-width: 2px;
}
.border-b-2 {
  border-bottom-style: var(--tw-border-style);
  border-bottom-width: 2px;
}
.bg-\[\#1F3F5C\] {
  background-color: #1F3F5C;
}
.bg-\[\#3C6183\] {
  background-color: #3C6183;
}
.bg-\[\#274F74\] {
  background-color: #274F74;
}
.bg-\[\#025098\] {
  background-color: #025098;
}
.bg-transparent {
  background-color: transparent;
}
.object-contain {
  object-fit: contain;
}
.object-cover {
  object-fit: cover;
}
.px-\[0\.68rem\] {
  padding-inline: 0.68rem;
}
.px-\[24px\] {
  padding-inline: 24px;
}
.px-\[2rem\] {
  padding-inline: 2rem;
}
.px-\[100px\] {
  padding-inline: 100px;
}
.py-\[0\.75rem\] {
  padding-block: 0.75rem;
}
.py-\[3rem\] {
  padding-block: 3rem;
}
.py-\[12px\] {
  padding-block: 12px;
}
.pt-\[3rem\] {
  padding-top: 3rem;
}
.pb-\[4rem\] {
  padding-bottom: 4rem;
}
.text-center {
  text-align: center;
}
.text-left {
  text-align: left;
}
.text-\[\#274F74\] {
  color: #274F74;
}
.capitalize {
  text-transform: capitalize;
}
.uppercase {
  text-transform: uppercase;
}
.italic {
  font-style: italic;
}
.underline {
  text-decoration-line: underline;
}
.opacity-100 {
  opacity: 100%;
}
.filter {
  filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
}
.transition {
  transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;
  transition-timing-function: var(--tw-ease, ease);
  transition-duration: var(--tw-duration, 0s);
}
.transition-colors {
  transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
  transition-timing-function: var(--tw-ease, ease);
  transition-duration: var(--tw-duration, 0s);
}
.transition-transform {
  transition-property: transform, translate, scale, rotate;
  transition-timing-function: var(--tw-ease, ease);
  transition-duration: var(--tw-duration, 0s);
}
.delay-100 {
  transition-delay: 100ms;
}
.delay-150 {
  transition-delay: 150ms;
}
.duration-75 {
  --tw-duration: 75ms;
  transition-duration: 75ms;
}
.duration-300 {
  --tw-duration: 300ms;
  transition-duration: 300ms;
}
.hover\:border-b-2 {
  &:hover {
    @media (hover: hover) {
      border-bottom-style: var(--tw-border-style);
      border-bottom-width: 2px;
    }
  }
}
.hover\:border-\[\#025098\] {
  &:hover {
    @media (hover: hover) {
      border-color: #025098;
    }
  }
}
.hover\:bg-\[\#3C6183\] {
  &:hover {
    @media (hover: hover) {
      background-color: #3C6183;
    }
  }
}
.hover\:bg-\[\#274F74\] {
  &:hover {
    @media (hover: hover) {
      background-color: #274F74;
    }
  }
}
.hover\:text-\[\#025098\] {
  &:hover {
    @media (hover: hover) {
      color: #025098;
    }
  }
}
.focus\:outline-none {
  &:focus {
    --tw-outline-style: none;
    outline-style: none;
  }
}
.no-scrollbar::-webkit-scrollbar {
  display: none;
}
.no-scrollbar {
  -ms-overflow-style: none;
  scrollbar-width: none;
}
#slider {
  white-space: nowrap;
  display: flex;
  min-width: 100%;
}
.font-body {
  font-family: "PT Serif", serif;
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
  initial-value: rotateX(0);
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
  initial-value: rotateY(0);
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
  initial-value: rotateZ(0);
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
  initial-value: skewX(0);
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
  initial-value: skewY(0);
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
